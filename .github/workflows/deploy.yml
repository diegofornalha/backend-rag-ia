name: Deploy to Render

on:
  workflow_run:
    workflows: ["Docker Build Test"]
    types:
      - completed
    branches: [main]

env:
  RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
  RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify Render credentials
        run: |
          if [ -z "$RENDER_API_KEY" ]; then
            echo "Error: RENDER_API_KEY is not set"
            exit 1
          fi
          if [ -z "$RENDER_SERVICE_ID" ]; then
            echo "Error: RENDER_SERVICE_ID is not set"
            exit 1
          fi

      - name: Deploy to Render
        run: |
          curl -X POST \
            "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
            -H "accept: application/json" \
            -H "authorization: Bearer $RENDER_API_KEY"

      - name: Wait for deployment
        run: |
          echo "Waiting for deployment to complete..."
          for i in {1..30}; do
            STATUS=$(curl -s \
              -H "accept: application/json" \
              -H "authorization: Bearer $RENDER_API_KEY" \
              "https://api.render.com/v1/services/$RENDER_SERVICE_ID" \
              | jq -r '.state')
            
            if [ "$STATUS" = "live" ]; then
              echo "Deployment successful!"
              exit 0
            fi
            
            if [ "$STATUS" = "failed" ]; then
              echo "Deployment failed!"
              exit 1
            fi
            
            echo "Current status: $STATUS"
            sleep 10
          done
          echo "Timeout waiting for deployment"
          exit 1

      - name: Verify service health
        run: |
          SERVICE_URL=$(curl -s \
            -H "accept: application/json" \
            -H "authorization: Bearer $RENDER_API_KEY" \
            "https://api.render.com/v1/services/$RENDER_SERVICE_ID" \
            | jq -r '.serviceDetails.url')

          for i in {1..5}; do
            if curl -s -f "$SERVICE_URL/api/v1/health"; then
              echo "Service is healthy!"
              exit 0
            fi
            sleep 5
          done
          echo "Service health check failed!"
          exit 1
