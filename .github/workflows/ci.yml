name: CI Pipeline

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        working-directory: ./backend_rag_ia
        run: |
          python -m pip install --upgrade pip
          pip install ruff pytest pytest-asyncio pytest-cov
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install fastapi uvicorn python-dotenv redis pydantic-settings
          fi

      - name: Run Ruff check
        working-directory: ./backend_rag_ia
        run: ruff check .

      - name: Run tests with coverage
        working-directory: ./backend_rag_ia
        run: |
          pytest --cov=backend_rag_ia --cov-report=xml
        env:
          REDIS_URL: "redis://localhost:6379"

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./backend_rag_ia/coverage.xml
          fail_ci_if_error: true

  build:
    needs: validate
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:5.0.1
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and test main image
        uses: docker/build-push-action@v4
        with:
          context: ./backend_rag_ia
          file: ./backend_rag_ia/Dockerfile
          push: false
          load: true
          tags: app:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and test search image
        uses: docker/build-push-action@v4
        with:
          context: ./backend_rag_ia
          file: ./backend_rag_ia/Dockerfile.search
          push: false
          load: true
          tags: search:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test containers
        working-directory: ./backend_rag_ia
        run: |
          docker run --network=host --rm app:test pytest
          docker run --network=host --rm search:test pytest

  security:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run dependency audit
        working-directory: ./backend_rag_ia
        run: |
          pip install safety
          if [ -f requirements.txt ]; then
            safety check -r requirements.txt
          else
            pip freeze > temp-requirements.txt
            safety check -r temp-requirements.txt
          fi

  deploy-approval:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [validate, build, security]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Trigger Render Deploy
        run: |
          curl -X POST \
            "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
            -H "accept: application/json" \
            -H "authorization: Bearer ${{ secrets.RENDER_API_KEY }}"
