name: Validação e Testes

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

jobs:
  validate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black flake8 mypy pytest pytest-cov pytest-asyncio safety bandit

      - name: Verificar formatação com Black
        run: black --check .

      - name: Análise estática com Flake8
        run: flake8 .

      - name: Verificar tipos com MyPy
        run: mypy .

      - name: Análise de segurança com Bandit
        run: bandit -r .

      - name: Verificar dependências com Safety
        run: safety check

      - name: Executar testes unitários
        run: |
          pytest tests/ --cov=. --cov-report=xml --asyncio-mode=auto

      - name: Testes de Performance
        run: |
          python -m pytest tests/performance/ --asyncio-mode=auto

      - name: Upload relatório de cobertura
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  lint-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Markdown Lint
        uses: DavidAnson/markdownlint-cli2-action@v11
        with:
          globs: "**/*.md"

      - name: Vale Docs Lint
        uses: errata-ai/vale-action@reviewdog
        with:
          files: docs/

  sonar:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3

      - name: Dependency Review
        uses: actions/dependency-review-action@v3

  performance:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install locust

      - name: Executar testes de carga
        run: |
          locust --headless -f tests/performance/locustfile.py --users 100 --spawn-rate 10 --run-time 5m

      - name: Analisar resultados
        run: python scripts/analyze_performance.py
