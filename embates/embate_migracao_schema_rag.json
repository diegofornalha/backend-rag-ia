{
  "titulo": "Migração do Schema para RAG",
  "version_key": "migracao_schema_rag_v1",
  "conteudo": "# Migração do Schema para RAG\n\n## Contexto\nPara melhor organização e segurança do banco de dados, foi decidido mover todas as tabelas relacionadas ao RAG para um schema dedicado chamado `rag`. Isso envolve a atualização de diversos arquivos e scripts para garantir que todas as operações continuem funcionando corretamente.\n\n## Mudanças Realizadas\n\n### Arquivos SQL\n1. Atualização dos scripts de setup:\n   - Modificado `a_01_base_conhecimento_regras_geral.sql`\n   - Modificado `b_02_embeddings_regras_geral.sql`\n   - Atualizado `d_setup_functions.sql`\n   - Atualizado `e_setup_search_functions.sql`\n   - Atualizado `b_policies.sql`\n\n2. Novos scripts de migração:\n   - Adicionado `c_update_schema_rag.sql`\n   - Adicionado `d_fix_schema_permissions.sql`\n   - Adicionado `e_setup_schema_rag.sql`\n   - Adicionado `f_setup_rpc.sql`\n\n3. Scripts de manutenção:\n   - Adicionado `a_check_table_structure.sql`\n\n### Ferramentas CLI\n1. Atualização das ferramentas existentes:\n   - Modificado `a_limpar_banco.py`\n   - Modificado `b_subir_para_supabase.py`\n\n2. Nova ferramenta:\n   - Adicionado `c_verificador_conformidade.py`\n\n### Scripts de Teste e Integração\n1. Atualização dos scripts de teste:\n   - Modificado `c_test_supabase.py`\n   - Modificado `c_testar_upload_regras.py`\n\n2. Novos scripts:\n   - Adicionado `a_verificar_tabelas.py`\n   - Adicionado `a_buscar_regras.py`\n\n### Serviços e Debugger\n1. Atualização dos serviços:\n   - Modificado `vector_store.py`\n   - Modificado `count_documents.py`\n\n## Impacto das Mudanças\n1. **Segurança**: Melhor isolamento dos dados do RAG\n2. **Organização**: Estrutura mais clara e dedicada\n3. **Manutenção**: Facilita o gerenciamento de permissões\n4. **Escalabilidade**: Prepara para futuras expansões\n\n## Status\nAs mudanças estão em processo de implementação e teste. Todos os scripts e ferramentas foram atualizados para usar o novo schema `rag`, mas alguns ajustes ainda podem ser necessários.\n\n## Próximos Passos\n1. Testar todas as funcionalidades após a migração\n2. Verificar permissões e políticas de acesso\n3. Atualizar documentação\n4. Realizar backup antes de aplicar em produção\n5. Planejar janela de manutenção para migração\n\n## Observações\nEsta migração é parte de um esforço maior para melhorar a organização e segurança do banco de dados. É importante garantir que todas as ferramentas e scripts sejam atualizados para usar o novo schema antes de finalizar a migração.",
  "error_log": null
}
