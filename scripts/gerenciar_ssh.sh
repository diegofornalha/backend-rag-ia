#!/bin/bash

# Configura√ß√µes
RENDER_SSH_HOST="ssh.oregon.render.com"
RENDER_SSH_USER="srv-ctmtqra3esus739sknb0"
RENDER_SSH_KEY="$HOME/.ssh/id_ed25519"

# Fun√ß√£o para executar comandos SSH
ssh_execute() {
    ssh -i "$RENDER_SSH_KEY" -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null "$RENDER_SSH_USER@$RENDER_SSH_HOST" "$1"
}

# Menu de op√ß√µes
echo "üöÄ Gerenciamento SSH do Render"
echo "1. Explorar diret√≥rios"
echo "2. Verificar ambiente Docker"
echo "3. Reiniciar aplica√ß√£o"
echo "4. Ver logs"
echo "5. Verificar processos"
echo "6. Limpar cache"
echo "7. Sair"

read -p "Escolha uma op√ß√£o (1-7): " opcao

case $opcao in
    1)
        echo "üìÇ Menu de Explora√ß√£o"
        echo "a) Listar diret√≥rio atual"
        echo "b) Listar /opt"
        echo "c) Listar /opt/render"
        echo "d) Verificar espa√ßo em disco"
        read -p "Escolha uma op√ß√£o (a-d): " subopcao
        case $subopcao in
            a) ssh_execute "ls -la" ;;
            b) ssh_execute "ls -la /opt" ;;
            c) ssh_execute "ls -la /opt/render" ;;
            d) ssh_execute "df -h" ;;
            *) echo "‚ùå Op√ß√£o inv√°lida" ;;
        esac
        ;;
    2)
        echo "üê≥ Menu Docker"
        echo "a) Listar containers"
        echo "b) Verificar imagens"
        echo "c) Verificar redes"
        echo "d) Status do sistema"
        read -p "Escolha uma op√ß√£o (a-d): " subopcao
        case $subopcao in
            a) ssh_execute "docker ps -a" ;;
            b) ssh_execute "docker images" ;;
            c) ssh_execute "docker network ls" ;;
            d) ssh_execute "docker system df" ;;
            *) echo "‚ùå Op√ß√£o inv√°lida" ;;
        esac
        ;;
    3)
        echo "üîÑ Reiniciando aplica√ß√£o..."
        ssh_execute "cd /opt/render/project/src && \
                    docker pull fornalha/backend:latest && \
                    docker stop \$(docker ps -q) 2>/dev/null || true && \
                    docker run -d -p 10000:10000 \
                    -e PYTHONPATH=/app/backend-rag-ia \
                    fornalha/backend:latest"
        ;;
    4)
        echo "üìù Menu de Logs"
        echo "a) Logs do container atual"
        echo "b) √öltimas 100 linhas"
        echo "c) Seguir logs em tempo real"
        read -p "Escolha uma op√ß√£o (a-c): " subopcao
        case $subopcao in
            a) ssh_execute "docker logs \$(docker ps -q)" ;;
            b) ssh_execute "docker logs --tail 100 \$(docker ps -q)" ;;
            c) ssh_execute "docker logs -f \$(docker ps -q)" ;;
            *) echo "‚ùå Op√ß√£o inv√°lida" ;;
        esac
        ;;
    5)
        echo "üëÄ Verificando processos..."
        ssh_execute "ps aux | grep python || true"
        ;;
    6)
        echo "üßπ Limpando cache..."
        ssh_execute "docker system prune -f"
        ;;
    7)
        echo "üëã Saindo..."
        exit 0
        ;;
    *)
        echo "‚ùå Op√ß√£o inv√°lida"
        exit 1
        ;;
esac 