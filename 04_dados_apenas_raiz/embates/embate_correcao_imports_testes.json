{
  "titulo": "Correção de Importações nos Testes após Reorganização",
  "tipo": "tecnico",
  "contexto": "Após a reorganização da estrutura de diretórios, vários testes estão falhando devido a problemas de importação. Os principais erros são:\n1. Módulos não encontrados após movimentação de arquivos\n2. Imports quebrados devido à nova estrutura\n3. Referências incorretas aos módulos do core",
  "status": "aberto",
  "data_inicio": "2024-01-02T20:30:00",
  "argumentos": [
    {
      "autor": "Desenvolvedor",
      "tipo": "analise",
      "conteudo": "Problemas Identificados:\n\n1. Módulos Não Encontrados:\n- backend_rag_ia.monitoring\n- backend_rag_ia.cli.embates.manager\n- backend_rag_ia.cli.embates.storage\n- backend_rag_ia.cli.embates.models\n- backend_rag_ia.cli.embates.commands\n\n2. Imports Relativos Quebrados:\n- Referências a 'cli' sem qualificação completa\n- Imports relativos (.embates.commands) não funcionando\n\n3. Classe Não Encontrada:\n- SemanticSearchManager não encontrada em semantic_search",
      "data": "2024-01-02T20:30:30"
    },
    {
      "autor": "Arquiteto",
      "tipo": "solucao",
      "conteudo": "Proposta de Solução:\n\n1. Ajustar Estrutura de Módulos:\n```\nbackend_rag_ia/\n├── monitoring/           # Recriar módulo\n├── cli/\n│   └── embates/         # Mover de volta componentes essenciais\n└── services/\n    └── semantic_search.py  # Adicionar classe faltante\n```\n\n2. Corrigir Imports:\n- Usar caminhos absolutos começando com 'backend_rag_ia'\n- Remover imports relativos problemáticos\n- Atualizar referências após movimentação\n\n3. Criar __init__.py:\n- Adicionar em todos os diretórios necessários\n- Exportar classes e funções apropriadamente\n\n4. Atualizar PYTHONPATH:\n- Garantir que raiz do projeto está no path\n- Configurar no pytest.ini se necessário",
      "data": "2024-01-02T20:31:00"
    },
    {
      "autor": "QA",
      "tipo": "validacao",
      "conteudo": "Critérios de Validação:\n1. Todos os imports devem resolver corretamente\n2. Testes devem executar sem erros de importação\n3. Manter funcionalidade original\n4. Documentação atualizada\n5. Sem imports circulares\n6. Cobertura de testes mantida",
      "data": "2024-01-02T20:31:30"
    },
    {
      "autor": "Tech Lead",
      "tipo": "implementacao",
      "conteudo": "Passos de Implementação:\n1. Recriar estrutura de diretórios faltante\n2. Mover arquivos para locais corretos\n3. Criar/atualizar __init__.py\n4. Corrigir imports nos testes\n5. Verificar PYTHONPATH\n6. Rodar testes para validar\n7. Atualizar documentação",
      "data": "2024-01-02T20:32:00"
    }
  ],
  "metadata": {
    "impacto": "alto",
    "prioridade": "alta",
    "tags": ["testes", "imports", "estrutura", "correcao"]
  }
}
