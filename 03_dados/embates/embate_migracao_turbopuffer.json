{
  "titulo": "Migração para Pinecone Turbopuffer",
  "version_key": "migracao_turbopuffer_v1",
  "conteudo": "# Migração para Pinecone Turbopuffer\n\n## Contexto\nO Pinecone anunciou que os índices vetoriais não-turbopuffer foram descontinuados. Como nossa aplicação utiliza o Pinecone para armazenamento de embeddings, precisamos migrar para a nova tecnologia Turbopuffer.\n\n## Decisão\nMigrar todos os índices vetoriais para o formato Turbopuffer do Pinecone. Esta decisão é necessária pois:\n- Os índices antigos foram descontinuados\n- O Turbopuffer é a nova tecnologia padrão\n- Precisamos manter o suporte e atualizações\n\n## Benefícios\n- Melhor performance na busca vetorial\n- Maior eficiência no uso de recursos\n- Suporte contínuo da plataforma\n- Acesso a recursos mais modernos\n\n## Plano de Implementação\n1. Backup dos dados existentes\n2. Criação de novos índices com Turbopuffer\n3. Migração dos dados para os novos índices\n4. Atualização das referências no código\n5. Testes de performance e validação\n\n## Código de Exemplo\n```python\nimport pinecone\n\n# Inicialização com Turbopuffer\npinecone.init(api_key='sua_api_key')\npinecone.create_index(\n    name='seu_indice',\n    dimension=1536,  # dimensão dos embeddings\n    metric='cosine'\n)\n\n# Verificação do status\nindex_description = pinecone.describe_index('seu_indice')\nprint(index_description)\n```\n\n## Status\nPendente de implementação\n\n## Impacto\n- Necessidade de downtime durante a migração\n- Possível necessidade de ajustes no código de busca vetorial\n- Melhoria esperada na performance após a migração",
  "error_log": null
}
