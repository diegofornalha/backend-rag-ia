{
  "metadata_global": {
    "language": "pt-BR",
    "tipo": "regra",
    "fonte": "REGRAS_DOCKER.md",
    "data_criacao": "2024-12-29T18:09:22.480118",
    "categorias": [
      "regras",
      "docker"
    ],
    "id": "2cb87e7a7b8d9b42daada997530f6b2c"
  },
  "document": {
    "content": "1. Estrutura do Dockerfile:\n- O Dockerfile deve estar **APENAS** na raiz do projeto\n- O requirements.txt deve estar **APENAS** na raiz do projeto\n- Não criar Dockerfiles duplicados em subdiretórios\n- O Render usa por padrão o Dockerfile e requirements.txt da raiz\n\n1.1 Organização de Arquivos Docker:\n- **Dockerfile** → Raiz do projeto (para deploy no Render)\n- **requirements.txt** → Raiz do projeto (para deploy no Render)\n- **docker-compose.yml** → Dentro da pasta específica do serviço (ex: `/monitoring`)\n- **Arquivos de configuração** → Junto com o docker-compose.yml do serviço (ex: `loki-config.yaml`)\n\nMulti-stage Build:\n```dockerfile\n\nEstágio de build:\nFROM python:3.11-slim as builder\n\nEstágio final:\nFROM python:3.11-slim\n```\n\nDiretórios e Permissões:\n```dockerfile\nRUN mkdir -p /app/logs /app/cache \\\n&& chmod -R 755 /app/logs /app/cache\n```\n\nVariáveis de Ambiente:\n```dockerfile\nENV PYTHONUNBUFFERED=1\nENV PORT=10000\n```\n\n3. Boas Práticas:\n- Usar multi-stage build para otimização\n- Manter apenas dependências necessárias\n- Limpar cache e arquivos temporários\n- Configurar healthcheck\n- Usar imagens slim para reduzir tamanho\n- Copiar apenas arquivos necessários\n\n4. Segurança:\n- Não expor senhas ou chaves no Dockerfile\n- Usar variáveis de ambiente para configurações sensíveis\n- Manter permissões restritas nos diretórios\n- Remover ferramentas de desenvolvimento no estágio final\n\n5. Deploy no Render:\n- O Render detecta automaticamente o Dockerfile na raiz\n- Não é necessário configurar comandos de build/start\n- O Render usa as variáveis de ambiente configuradas na plataforma\n- A porta padrão deve ser 10000 para compatibilidade",
    "metadata": {
      "type": "regra",
      "title": "REGRAS_DOCKER",
      "autor": "sistema",
      "formato_original": "markdown",
      "tags": [
        "documentação",
        "regras",
        "docker"
      ],
      "versao": "1.0"
    }
  }
}